@model MT.CSGPortal.Entities.ViewModels.AddArchitect

@using (Ajax.BeginForm("AddArchitect", "Mind", null, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "AddArchitectForm", LoadingElementId = "submitforminprogress", OnComplete = "HideFormMessage" }, new { @class = "bs-example form-horizontal" }))
{
    <div id="responseMsgs">
        @Html.Partial("_FormMessages", Model.FormSubmissionMessages)
    </div>
    Html.EnableClientValidation();
    #region fields
    <fieldset>
        <legend>Architect details</legend>
        <div id="submitforminprogress" class="loadingmain formsubmit">
            <img src="~/Images/mainloader.gif" />
        </div>
        <!-- MID -->
        <div class="form-group">
            @Html.LabelFor(model => model.MID, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.MID, new { @class = "form-control", @readonly = "true" })
            </div>
        </div>

        <!-- Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @readonly = "true" })
            </div>
        </div>

        <!-- Professional summary -->
        <div class="form-group">
            @Html.LabelFor(model => model.ProfessionalSummary, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextAreaFor(model => model.ProfessionalSummary, new { @class = "form-control", @rows = "3" })
                <span class="help-block">Max. of XXXX characters</span>
            </div>
        </div>

        <!-- Exp in months -->
        <div class="form-group">
            @Html.LabelFor(model => model.ExperienceInMonths, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.ExperienceInMonths, new { @class = "form-control" })
            </div>
        </div>

        <!-- Designation -->
        <div class="form-group">
            @Html.LabelFor(model => model.Designation, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.DropDownListFor(model => model.Designation, Model.DesignationList, new { @class = "form-control" })
            </div>
        </div>

        <!-- Base Location -->
        <div class="form-group">
            @Html.LabelFor(model => model.BaseLocation, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.BaseLocation, new { @class = "form-control" })
            </div>
        </div>

        <!-- Qualification -->
        <div class="form-group">
            @Html.LabelFor(model => model.Qualification, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.DropDownListFor(model => model.Qualification, Model.QualificationList, new { @class = "form-control" })
            </div>
        </div>

        <!-- Joined Date -->
        <div class="form-group">
            @Html.LabelFor(model => model.JoinedDate, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.JoinedDate, new { @class = "form-control" })
            </div>
        </div>

        <!-- Extension num -->
        <div class="form-group">
            @Html.LabelFor(model => model.ExtensionNumber, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.ExtensionNumber, new { @class = "form-control" })
            </div>
        </div>

        <!-- Cell phone num -->
        <div class="form-group">
            @Html.LabelFor(model => model.CellPhoneNumber, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.CellPhoneNumber, new { @class = "form-control" })
            </div>
        </div>

        <!-- Residence phone num -->
        <div class="form-group">
            @Html.LabelFor(model => model.ResidencePhoneNumber, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.ResidencePhoneNumber, new { @class = "form-control" })
            </div>
        </div>

        <!-- Work email -->
        <div class="form-group">
            @Html.LabelFor(model => model.WorkEmail, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.WorkEmail, new { @class = "form-control" })
            </div>
        </div>

        <!-- personal email -->
        <div class="form-group">
            @Html.LabelFor(model => model.PersonalEMail, new { @class = "col-lg-4 control-label" })
            <div class="col-lg-8">
                @Html.TextBoxFor(model => model.PersonalEMail, new { @class = "form-control" })
            </div>
        </div>

        <!-- buttons -->
        <div class="form-group">
            <div class="col-lg-10 col-lg-offset-2">
                <button type="button" onclick="backToResults()" class="btn btn-default">Cancel</button>
                @*<button type="submit" class="btn btn-primary">Save Changes</button>*@
                <input type="submit" class="btn btn-primary" value="Save Changes" onclick="EmptyFormMessage()" />
            </div>
        </div>
    </fieldset>
    #endregion
}
